name: Validate README Changes

on:
  pull_request_target:
    types:
      - opened
      - edited
      - reopened
      - synchronize
  merge_group:
    types:
      - checks_requested

jobs:
  getChangedChartsPR:
    uses: ./.github/workflows/get-changed-charts-pr.yaml
    if: ${{ github.event.pull_request != null }}
    permissions:
      pull-requests: read
    with:
      pr_number: ${{ github.event.pull_request.number || 0 }}
  getChangedChartsMQ:
    uses: ./.github/workflows/get-changed-charts-merge-queue.yaml
    if: ${{ github.event.merge_group != null }}
    permissions:
      contents: read
    with:
      base_commit: ${{ github.event.merge_group.base_sha || '' }}
      head_commit: ${{ github.event.merge_group.head_sha || '' }}
  validateREADMEChanges:
    if: ${{ always() && contains(needs.*.result, 'success') && !contains(needs.*.result, 'failure') && !contains((needs.getChangedChartsPR.outputs.charts || needs.getChangedChartsMQ.outputs.charts), '[]') }}
    name: Validate README changes
    runs-on: ubuntu-latest
    needs:
      - getChangedChartsPR
      - getChangedChartsMQ
    permissions:
      pull-requests: read
      contents: read
    strategy:
      matrix:
        chart: ${{ fromJson(needs.getChangedChartsPR.outputs.charts || needs.getChangedChartsMQ.outputs.charts) }}
    steps:
      - run: pip install yq
      - name: Verify readme is updated on major update
        env:
          GH_TOKEN: ${{ github.token }}
          CHANGED_CHART: ${{ matrix.chart }}
          BASE_COMMIT: ${{ github.event.pull_request.base.sha || github.event.merge_group.base_sha }}
          HEAD_COMMIT: ${{ github.event.pull_request.head.sha || github.event.merge_group.head_sha }}
        run: |
          [[ "$RUNNER_DEBUG" == 1 ]] && set -x
          set -e
          set -o pipefail

          hasBreakingChange=false
          #shellcheck disable=SC2086
          for commit in $(gh api --paginate "/repos/${GITHUB_REPOSITORY}/compare/${BASE_COMMIT}...${HEAD_COMMIT}" | jq -r '.commits | map(.commit.tree.sha)[]'); do
            if cog verify "$(gh api --paginate /repos/${GITHUB_REPOSITORY}/commits/$commit | jq -r .commit.message)" 2>&1 | grep -qi 'BREAKING CHANGE'; then
              hasBreakingChange=true
              break
            fi
          done

          if [[ "$hasBreakingChange" == true ]]; then
            major="$(gh api --paginate "/repos/${GITHUB_REPOSITORY}/contents/charts/${CHANGED_CHART}/Chart.yaml?ref=${HEAD_COMMIT}" | jq -er .content | base64 -d | yq -er '.version | split(".")[0]')"
            migrationLine="### $major\.x\.x -> $(( major + 1))\.0\.0"
            if [[ "$(gh api --paginate "/repos/${GITHUB_REPOSITORY}/contents/charts/${CHANGED_CHART}/README.md.gotmpl?ref=${HEAD_COMMIT}" | jq -er .content | base64 -d | grep -c "$migrationLine")" != 1 ]]; then
              echo "You need to provide a migration info for this breaking change, and exactly one" >&2
              echo "Add > $migrationLine < to README.md.gotmpl"
              exit 1
            fi
          fi
