{{- $name := (printf "%s-config" (include "ckan.postgresql.fullname" .)) -}}
{{- $postgresPassword := include "common.secrets.passwords.manage" (dict "secret" $name "length" 42 "strong" false "key" "postgresPassword" "providedValues" (list "postgresql.ckanDbs.postgresPassword") "skipB64enc" true "context" (dict "Values" .Values "Release" ((dict "IsUpgrade" false "IsInstall" true "Namespace" .Release.Namespace) | mergeOverwrite (deepCopy .Release)))) }}
{{- $replicationPassword := include "common.secrets.passwords.manage" (dict "secret" $name "length" 42 "strong" false "key" "replicationPassword" "providedValues" (list "postgresql.ckanDbs.replicationPassword") "skipB64enc" true "context" (dict "Values" .Values "Release" ((dict "IsUpgrade" false "IsInstall" true "Namespace" .Release.Namespace) | mergeOverwrite (deepCopy .Release)))) }}
{{- $ckanDatabasePassword := include "common.secrets.passwords.manage" (dict "secret" $name "length" 42 "strong" false "key" "ckanDatabasePassword" "providedValues" (list "postgresql.ckanDbs.ckan.password") "skipB64enc" true "context" (dict "Values" .Values "Release" ((dict "IsUpgrade" false "IsInstall" true "Namespace" .Release.Namespace) | mergeOverwrite (deepCopy .Release)))) }}
{{- $datastorePassword := include "common.secrets.passwords.manage" (dict "secret" $name "length" 42 "strong" false "key" "datastorePassword" "providedValues" (list "postgresql.ckanDbs.datastore.password") "skipB64enc" true "context" (dict "Values" .Values "Release" ((dict "IsUpgrade" false "IsInstall" true "Namespace" .Release.Namespace) | mergeOverwrite (deepCopy .Release)))) }}
{{- $datapusherPassword := include "common.secrets.passwords.manage" (dict "secret" $name "length" 42 "strong" false "key" "datapusherPassword" "providedValues" (list "postgresql.ckanDbs.datapusher.password") "skipB64enc" true "context" (dict "Values" .Values "Release" ((dict "IsUpgrade" false "IsInstall" true "Namespace" .Release.Namespace) | mergeOverwrite (deepCopy .Release)))) }}
{{- $ckanDatabaseUsername := (.Values.postgresql.ckanDbs.ckan.username | default "ckan" )}}
{{- $ckanDatabase := (.Values.postgresql.ckanDbs.ckan.db | default "ckandb" )}}
{{- $datastoreUsername := (.Values.postgresql.ckanDbs.datastore.username | default "datastore" )}}
{{- $datastoreDatabase := (.Values.postgresql.ckanDbs.datastore.db | default "datastoredb" )}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $name }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: {{ $name }}
  namespace: {{ .Release.Namespace | quote }}
stringData:
  postgresPassword: {{ $postgresPassword }}
  replicationPassword: {{ $replicationPassword }}
  ckanDatabaseUsername: {{ $ckanDatabaseUsername | quote }}
  ckanDatabasePassword: {{ $ckanDatabasePassword }}
  ckanDatabase: {{ $ckanDatabase | quote }}
  datastoreUsername: {{ $datastoreUsername | quote }}
  datastorePassword: {{ $datastorePassword }}
  datastoreDatabase: {{ $datastoreDatabase | quote }}
  datapusherUsername: {{ .Values.postgresql.ckanDbs.datapusher.username | default "datapusher" | quote}}
  datapusherPassword: {{ $datapusherPassword }}
  datapusherDatabase: {{ .Values.postgresql.ckanDbs.datapusher.db | default "datapusherdb" | quote}}