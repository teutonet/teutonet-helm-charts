{{- $name := "kafka" -}}
{{- $fullName := printf "%s-%s" (include "common.names.fullname" $) $name -}}
{{- $svcNameKafka := printf "%s-%s" (include "common.names.fullname" $) $name -}}
{{- $configNameKafka := printf "%s-%s-config" (include "common.names.fullname" $) $name  -}}
{{- $claimName := printf "%s-%s" (include "common.names.fullname" $) $name -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: {{ $name }}
spec:
  replicas: {{ .Values.kafka.replicaCount }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ $name }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.matchLabels" . | nindent 8 }}
        app.kubernetes.io/component: {{ $name }}
    spec:
      hostname: {{ $fullName | quote }}
      {{- include "common.images.renderPullSecrets" ( dict "images" (list .Values.postgres.image) "context" $) | indent 6 }}
      automountServiceAccountToken: false
      securityContext:
        {{- toYaml .Values.kafka.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ printf "%s-%s" .Chart.Name $name }}
          command:
            - /tmp/entrypoint.sh
          env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://{{ $fullName }}:9092,PLAINTEXT_HOST://{{ $fullName }}:29092
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: CONTROLLER
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: 1@{{ $fullName }}:29093
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: PLAINTEXT
            - name: KAFKA_LISTENERS
              value: CONTROLLER://{{ $fullName }}:29093,PLAINTEXT://{{ $fullName }}:9092,PLAINTEXT_HOST://0.0.0.0:29092
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            - name: KAFKA_LOG4J_ROOT_LOGLEVEL
              value: INFO
            - name: KAFKA_NODE_ID
              value: "1"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_PROCESS_ROLES
              value: broker,controller        
          securityContext:
            {{- toYaml .Values.kafka.securityContext | nindent 12 }}
          image: {{ include "common.images.image" (dict "imageRoot" .Values.kafka.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.kafka.image.pullPolicy }}
          ports:
            - name: kafka
              containerPort: {{ include "stellio.kafka.service.port" $ }}
              protocol: TCP
          resources:
            {{- toYaml .Values.kafka.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp/
              name: kafka-config
              readOnly: true
      volumes:
        - name: kafka-config
          configMap:
            name: {{ $configNameKafka }}
            defaultMode: 0777
        - name: kafka-claim0
          persistentVolumeClaim:
            claimName: {{ $claimName }}