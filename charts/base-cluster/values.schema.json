{
  "$schema": "https://json-schema.org/draft-07/schema",
  "type": "object",
  "title": "base cluster configuration",
  "properties": {
    "global": {
      "type": "object",
      "properties": {
        "serviceLevelAgreement": {
          "type": "string",
          "description": "The ServiceLevelAgreement with teutonet, will be applied to all alerts as label `teutosla`",
          "enum": [
            "None",
            "24x7",
            "WorkingHours"
          ],
          "default": "None"
        },
        "clusterName": {
          "type": "string",
          "description": "The name of the cluster, used as subdomain under `baseDomain` and as label `cluster` on all alerts",
          "examples": [
            "eu-2"
          ]
        },
        "baseDomain": {
          "type": "string",
          "description": "The base domain to be used for cluster ingress",
          "examples": [
            "teuto.net"
          ]
        },
        "imageRegistry": {
          "type": "string",
          "description": "The global container image proxy, e.g. [Nexus](https://artifacthub.io/packages/helm/sonatype/nexus-repository-manager), this needs to support various registries",
          "examples": [
            "nexus.teuto.net"
          ]
        },
        "imageCredentials": {
          "type": "object",
          "description": "A map of credentials to be created and synced into namespaces, the key is the secret name",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "examples": [
                  "docker.io"
                ]
              },
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "targetNamespaces": {
                "$ref": "#/$defs/targetNamespaces"
              }
            },
            "required": [
              "host",
              "username",
              "password"
            ],
            "additionalProperties": false
          }
        },
        "kubectl": {
          "type": "object",
          "description": "Image with `kubectl` binary",
          "properties": {
            "image": {
              "$ref": "#/$defs/image"
            }
          },
          "additionalProperties": false
        },
        "curl": {
          "type": "object",
          "description": "Image with `curl` binary",
          "properties": {
            "image": {
              "$ref": "#/$defs/image"
            }
          },
          "additionalProperties": false
        },
        "flux": {
          "type": "object",
          "description": "Image with `flux` binary",
          "properties": {
            "image": {
              "$ref": "#/$defs/image"
            }
          },
          "additionalProperties": false
        },
        "gpg": {
          "type": "object",
          "description": "Image with `gpg` binary",
          "properties": {
            "image": {
              "$ref": "#/$defs/image"
            }
          },
          "additionalProperties": false
        },
        "networkPolicy": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Which networkPolicy to create, `auto` tries to detect the deployed framework, checking first for `cilium`",
              "enum": [
                "none",
                "auto",
                "cilium",
                "kubernetes"
              ]
            },
            "metricsLabels": {
              "type": "object",
              "description": "The labels used to allow ingress from the metrics service",
              "additionalProperties": {
                "type": "string"
              },
              "minProperties": 1
            },
            "dnsLabels": {
              "type": "object",
              "description": "The labels used to allow egress to the DNS service",
              "additionalProperties": {
                "type": "string"
              },
              "minProperties": 1
            },
            "ingressLabels": {
              "type": "object",
              "description": "The labels used to allow egress to the DNS service",
              "additionalProperties": {
                "type": "string"
              },
              "minProperties": 1
            }
          },
          "additionalProperties": false
        },
        "helmRepositories": {
          "type": "object",
          "description": "A map of helmRepositories to create, the key is the name",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "pattern": "(https|oci)://.+"
              },
              "interval": {
                "type": "string",
                "description": "The interval in which to update the repository",
                "pattern": "[0-9]+[mhd]"
              },
              "condition": {
                "$ref": "#/$defs/condition"
              },
              "charts": {
                "type": "object",
                "description": "Which charts are deployed in which version using this repo, used internally",
                "additionalProperties": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "branch": {
                          "type": "string"
                        },
                        "commit": {
                          "type": "string"
                        },
                        "semver": {
                          "type": "string"
                        },
                        "tag": {
                          "type": "string"
                        },
                        "path": {
                          "type": "string",
                          "description": "Path of the chart in the repository"
                        },
                        "interval": {
                          "type": "string",
                          "description": "The interval in which to update the repository",
                          "pattern": "[0-9]+[mhd]"
                        }
                      },
                      "oneOf": [
                        {
                          "required": [
                            "branch"
                          ]
                        },
                        {
                          "required": [
                            "commit"
                          ]
                        },
                        {
                          "required": [
                            "semver"
                          ]
                        },
                        {
                          "required": [
                            "tag"
                          ]
                        },
                        {
                          "not": {
                            "anyOf": [
                              {
                                "required": [
                                  "branch"
                                ]
                              },
                              {
                                "required": [
                                  "commit"
                                ]
                              },
                              {
                                "required": [
                                  "semver"
                                ]
                              },
                              {
                                "required": [
                                  "tag"
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "additionalProperties": false
                    }
                  ]
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "git",
                  "helm"
                ],
                "default": "helm"
              }
            },
            "oneOf": [
              {
                "properties": {
                  "url": {
                    "type": "string",
                    "pattern": "(https|oci)://.+"
                  },
                  "charts": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "oneOf": [
                  {
                    "not": {
                      "required": [
                        "type"
                      ]
                    }
                  },
                  {
                    "properties": {
                      "type": {
                        "const": "helm"
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                ]
              },
              {
                "properties": {
                  "url": {
                    "type": "string",
                    "pattern": "https://.+"
                  },
                  "type": {
                    "const": "git"
                  }
                },
                "not": {
                  "required": [
                    "interval"
                  ]
                },
                "required": [
                  "charts",
                  "type"
                ]
              }
            ],
            "additionalProperties": false,
            "required": [
              "url"
            ]
          }
        },
        "certificates": {
          "type": "object",
          "description": "A map of cert-manager certificates to create and sync its secrets into namespaces, the key is the name, therefore the secret name will be `$key`-certificate",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "dnsNames": {
                "description": "The dnsNames to create",
                "oneOf": [
                  {
                    "type": "string",
                    "description": "This will be templated"
                  },
                  {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                      "type": "string"
                    }
                  }
                ],
                "examples": [
                  "test.teuto.net",
                  "*.test.teuto.net"
                ]
              },
              "targetNamespaces": {
                "$ref": "#/$defs/targetNamespaces"
              },
              "condition": {
                "$ref": "#/$defs/condition"
              }
            },
            "required": [
              "dnsNames"
            ],
            "additionalProperties": false
          }
        },
        "storageClass": {
          "$ref": "#/$defs/storageClass"
        },
        "namespaces": {
          "type": "object",
          "description": "Namespaces to create. AND *delete* if removed. These will also be the only ones, including the builtin namespaces, for which alerts will be sent if `monitoring.monitorAllNamespaces=false`",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "additionalLabels": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "condition": {
                "$ref": "#/$defs/condition"
              },
              "resources": {
                "type": "object",
                "properties": {
                  "defaults": {
                    "type": "object",
                    "minProperties": 1,
                    "properties": {
                      "requests": {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/$defs/quantity"
                        }
                      },
                      "limits": {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/$defs/quantity"
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "quotas": {
                    "type": "object",
                    "description": "See https://kubernetes.io/docs/concepts/policy/resource-quotas/",
                    "additionalProperties": {
                      "$ref": "#/$defs/quantity"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "priorityClasses": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "minimum": -2147483648,
                "maximum": 1000000000
              },
              "description": {
                "type": "string"
              },
              "preemptionPolicy": {
                "type": "string",
                "enum": [
                  "PreemptLowerPriority",
                  "Never"
                ],
                "default": "PreemptLowerPriority"
              }
            },
            "required": [
              "value"
            ],
            "additionalProperties": false
          },
          "propertyNames": {
            "maxLength": 63
          }
        },
        "authentication": {
          "type": "object",
          "properties": {
            "config": {
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string"
                },
                "clientSecret": {
                  "type": "string"
                },
                "issuerHost": {
                  "type": "string"
                },
                "issuerPath": {
                  "type": "string"
                }
              },
              "required": [
                "clientId",
                "clientSecret",
                "issuerHost"
              ],
              "additionalProperties": false
            },
            "grafana": {
              "type": "object",
              "properties": {
                "roleAttributePath": {
                  "type": "string"
                },
                "authenticationPath": {
                  "type": "string"
                },
                "apiPath": {
                  "type": "string"
                },
                "tokenPath": {
                  "type": "string"
                }
              },
              "description": "See https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-authentication/generic-oauth/#configuration-options",
              "additionalProperties": false
            },
            "oauthProxy": {
              "type": "object",
              "properties": {
                "emailDomains": {
                  "type": "array",
                  "additionalItems": {
                    "type": "string",
                    "$ref": "#/$defs/email"
                  }
                },
                "resourcesPreset": {
                  "$ref": "#/$defs/resourcesPreset"
                },
                "resources": {
                  "$ref": "#/$defs/resourceRequirements"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      }
    },
    "kyverno": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "podSecurityStandard": {
          "type": "string",
          "description": "See https://kyverno.io/policies",
          "enum": [
            "baseline",
            "restricted",
            "privileged",
            "custom"
          ]
        },
        "podSecuritySeverity": {
          "type": "string",
          "enum": [
            "low",
            "medium",
            "high"
          ]
        },
        "validationFailureAction": {
          "type": "string",
          "description": "Enforce means to deny the request",
          "enum": [
            "audit",
            "enforce"
          ]
        }
      },
      "additionalProperties": false
    },
    "monitoring": {
      "type": "object",
      "properties": {
        "monitorAllNamespaces": {
          "type": "boolean"
        },
        "labels": {
          "type": "object",
          "description": "The labels to set on ServiceMonitors, ... and which the prometheus uses to search for",
          "additionalProperties": {
            "type": "string"
          }
        },
        "deadMansSwitch": {
          "type": "object",
          "description": "This needs `.global.clusterName` to be set up as an integration in healthchecks.io. Also, `.global.baseDomain` has to be set.",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "apiKey": {
              "type": "string",
              "description": "Used for registration and unregistration"
            },
            "pingKey": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "kdave": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "prometheus": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "replicas": {
              "type": "integer",
              "minimum": 1
            },
            "resourcesPreset": {
              "$ref": "#/$defs/resourcesPreset"
            },
            "resources": {
              "$ref": "#/$defs/resourceRequirements"
            },
            "retentionDuration": {
              "type": "string",
              "pattern": "[0-9]+(ms|s|m|h|d|w|y)"
            },
            "retentionSize": {
              "type": "string",
              "pattern": "[0-9]+(B|KB|MB|GB|TB|PB|EB)"
            },
            "persistence": {
              "type": "object",
              "properties": {
                "storageClass": {
                  "$ref": "#/$defs/storageClass"
                },
                "size": {
                  "$ref": "#/$defs/quantity"
                }
              },
              "additionalProperties": false
            },
            "operator": {
              "type": "object",
              "properties": {
                "resourcesPreset": {
                  "$ref": "#/$defs/resourcesPreset"
                },
                "resources": {
                  "$ref": "#/$defs/resourceRequirements"
                }
              },
              "additionalProperties": false
            },
            "kubeStateMetrics": {
              "type": "object",
              "properties": {
                "resourcesPreset": {
                  "$ref": "#/$defs/resourcesPreset"
                },
                "resources": {
                  "$ref": "#/$defs/resourceRequirements"
                },
                "metricLabelsAllowList": {
                  "type": "object",
                  "description": "A map of resource/[label] that will be set as labels on the state metrics",
                  "additionalProperties": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            "nodeExporter": {
              "type": "object",
              "properties": {
                "resourcesPreset": {
                  "$ref": "#/$defs/resourcesPreset"
                },
                "resources": {
                  "$ref": "#/$defs/resourceRequirements"
                }
              },
              "additionalProperties": false
            },
            "ingress": {
              "$ref": "#/$defs/toolIngress"
            },
            "alertmanager": {
              "type": "object",
              "properties": {
                "receivers": {
                  "type": "object",
                  "properties": {
                    "pagerduty": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        },
                        "url": {
                          "type": "string"
                        },
                        "integrationKey": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "ingress": {
                  "$ref": "#/$defs/toolIngress"
                },
                "replicas": {
                  "type": "integer",
                  "minimum": 1
                },
                "retentionDuration": {
                  "type": "string",
                  "pattern": "[0-9]+(ms|s|m|h|d|w|y)"
                },
                "persistence": {
                  "type": "object",
                  "properties": {
                    "storageClass": {
                      "$ref": "#/$defs/storageClass"
                    },
                    "size": {
                      "$ref": "#/$defs/quantity"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "grafana": {
          "type": "object",
          "properties": {
            "adminPassword": {
              "type": "string"
            },
            "ingress": {
              "$ref": "#/$defs/toolIngress"
            },
            "additionalDashboards": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "gnetId": {
                    "type": "integer"
                  },
                  "revision": {
                    "type": "integer"
                  },
                  "datasource": {
                    "type": "string"
                  }
                },
                "required": [
                  "gnetId"
                ],
                "additionalProperties": false
              }
            },
            "config": {
              "type": "object"
            },
            "notifiers": {
              "type": "array",
              "description": "See https://grafana.com/docs/grafana/latest/administration/provisioning",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "uid": {
                    "type": "string"
                  },
                  "org_id": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "is_default": {
                    "type": "boolean"
                  },
                  "send_reminder": {
                    "type": "boolean"
                  },
                  "frequency": {
                    "type": "string"
                  },
                  "settings": {
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "type"
                ],
                "additionalProperties": false
              }
            },
            "additionalPlugins": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "resourcesPreset": {
              "$ref": "#/$defs/resourcesPreset"
            },
            "resources": {
              "$ref": "#/$defs/resourceRequirements"
            },
            "persistence": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "size": {
                  "$ref": "#/$defs/quantity"
                },
                "storageClassName": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "sidecar": {
              "type": "object",
              "properties": {
                "resourcesPreset": {
                  "$ref": "#/$defs/resourcesPreset"
                },
                "resources": {
                  "$ref": "#/$defs/resourceRequirements"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "loki": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "persistence": {
              "type": "object",
              "properties": {
                "size": {
                  "$ref": "#/$defs/quantity"
                },
                "storageClass": {
                  "$ref": "#/$defs/storageClass"
                }
              },
              "additionalProperties": false
            },
            "replicas": {
              "type": "integer",
              "minimum": 1
            },
            "resourcesPreset": {
              "$ref": "#/$defs/resourcesPreset"
            },
            "resources": {
              "$ref": "#/$defs/resourceRequirements"
            },
            "promtail": {
              "type": "object",
              "properties": {
                "resourcesPreset": {
                  "$ref": "#/$defs/resourcesPreset"
                },
                "resources": {
                  "$ref": "#/$defs/resourceRequirements"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "metricsServer": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "storageCostAnalysis": {
          "type": "object",
          "description": "Configuration of the `storageCostAnalysis dashboard",
          "properties": {
            "period": {
              "type": "string",
              "description": "The billing period",
              "examples": [
                "Day",
                "Month"
              ],
              "default": "Day"
            },
            "currency": {
              "type": "string",
              "examples": [
                "currencyUSD",
                "currencyEUR"
              ],
              "default": "currencyEUR"
            },
            "storageClassMapping": {
              "type": "object",
              "description": "A map of storageClasses to their cost per GiB/$period",
              "additionalProperties": {
                "type": "number"
              }
            }
          },
          "additionalProperties": false
        },
        "securityScanning": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "nodeCollector": {
              "type": "object",
              "properties": {
                "tolerations": {
                  "type": "array",
                  "items": {
                    "$ref": "#/$defs/tolerations"
                  }
                }
              }
            }
          },
          "additionalProperties": false
        },
        "tracing": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "ingester": {
              "type": "object",
              "properties": {
                "resourcesPreset": {
                  "$ref": "#/$defs/resourcesPreset"
                },
                "resources": {
                  "$ref": "#/$defs/resourceRequirements"
                }
              },
              "additionalProperties": false
            }
          }
        },
        "additionalProperties": false
      },
      "additionalProperties": false
    },
    "descheduler": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "strategies": {
          "type": "object",
          "description": "See https://github.com/kubernetes-sigs/descheduler#policy-and-strategies. The key is the policy name",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "params": {
                "type": "object",
                "additionalProperties": true
              }
            },
            "additionalProperties": false
          }
        },
        "resourcesPreset": {
          "$ref": "#/$defs/resourcesPreset"
        },
        "resources": {
          "$ref": "#/$defs/resourceRequirements"
        }
      },
      "additionalProperties": false
    },
    "dns": {
      "type": "object",
      "properties": {
        "provider": {
          "description": "Setting a provider enabled various DNS based features, such as `external-dns`, wildcard certificates, ...",
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "cloudflare": {
                  "type": "object",
                  "properties": {
                    "apiToken": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "apiToken"
                  ]
                }
              },
              "required": [
                "cloudflare"
              ]
            },
            {
              "type": "null"
            }
          ]
        },
        "domains": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "certManager": {
      "type": "object",
      "properties": {
        "resourcesPreset": {
          "$ref": "#/$defs/resourcesPreset"
        },
        "resources": {
          "$ref": "#/$defs/resourceRequirements"
        },
        "email": {
          "type": "string",
          "description": "Setting an email enables cert-manager's IngressShim and will be used for Let's Encrypt",
          "$ref": "#/$defs/email"
        },
        "webhook": {
          "type": "object",
          "properties": {
            "resourcesPreset": {
              "$ref": "#/$defs/resourcesPreset"
            },
            "resources": {
              "$ref": "#/$defs/resourceRequirements"
            }
          },
          "additionalProperties": false
        },
        "caInjector": {
          "type": "object",
          "properties": {
            "resourcesPreset": {
              "$ref": "#/$defs/resourcesPreset"
            },
            "resources": {
              "$ref": "#/$defs/resourceRequirements"
            }
          },
          "additionalProperties": false
        },
        "dnsChallengeNameservers": {
          "type": "object",
          "patternProperties": {
            "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)\\.?\\b){4}$": {
              "type": "integer",
              "minimum": 1,
              "maximum": 65535
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "externalDNS": {
      "type": "object",
      "properties": {
        "resourcesPreset": {
          "$ref": "#/$defs/resourcesPreset"
        },
        "resources": {
          "$ref": "#/$defs/resourceRequirements"
        }
      },
      "additionalProperties": false
    },
    "flux": {
      "type": "object",
      "properties": {
        "gitRepositories": {
          "type": "object",
          "description": "A map of gitRepositories to create",
          "additionalProperties": {
            "type": "object",
            "allOf": [
              {
                "oneOf": [
                  {
                    "properties": {
                      "url": {
                        "pattern": "https://.+"
                      }
                    },
                    "oneOf": [
                      {
                        "required": [
                          "password",
                          "username"
                        ]
                      },
                      {
                        "not": {
                          "anyOf": [
                            {
                              "required": [
                                "username"
                              ]
                            },
                            {
                              "required": [
                                "password"
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "properties": {
                      "url": {
                        "pattern": "^ssh://.+@[^:]+(?::\\d+/)?[^:]*$",
                        "description": "This needs to follow flux's way of writing this url, see https://fluxcd.io/flux/components/source/gitrepositories/#url"
                      }
                    },
                    "not": {
                      "anyOf": [
                        {
                          "required": [
                            "username"
                          ]
                        },
                        {
                          "required": [
                            "password"
                          ]
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "oneOf": [
                  {
                    "required": [
                      "branch"
                    ]
                  },
                  {
                    "required": [
                      "commit"
                    ]
                  },
                  {
                    "required": [
                      "semver"
                    ]
                  },
                  {
                    "required": [
                      "tag"
                    ]
                  },
                  {
                    "not": {
                      "anyOf": [
                        {
                          "required": [
                            "branch"
                          ]
                        },
                        {
                          "required": [
                            "commit"
                          ]
                        },
                        {
                          "required": [
                            "semver"
                          ]
                        },
                        {
                          "required": [
                            "tag"
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            ],
            "properties": {
              "url": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "branch": {
                "type": "string",
                "default": "master"
              },
              "commit": {
                "type": "string"
              },
              "semver": {
                "type": "string"
              },
              "tag": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "gitInterval": {
                "type": "string",
                "description": "The interval in which to sync the repository",
                "pattern": "[0-9]+(ms|s|m|h|d|w|y)",
                "default": "1m"
              },
              "decryption": {
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string",
                    "enum": [
                      "sops"
                    ]
                  }
                },
                "required": [
                  "provider"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "url"
            ],
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "ingress": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "minimum": 1
        },
        "resourcesPreset": {
          "$ref": "#/$defs/resourcesPreset"
        },
        "resources": {
          "$ref": "#/$defs/resourceRequirements"
        },
        "enabled": {
          "type": "boolean"
        },
        "allowNginxConfigurationSnippets": {
          "type": "boolean",
          "description": "Please don't do it if not absolutely necessary, it goes against all best practices. Ref.: https://docs.nginx.com/nginx-ingress-controller/configuration/global-configuration/command-line-arguments#cmdoption-enable-snippets"
        },
        "IP": {
          "type": "string",
          "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)\\.?\\b){4}$",
          "description": "Try to use specified IP as loadbalancer IP"
        }
      },
      "additionalProperties": false
    },
    "storage": {
      "type": "object",
      "properties": {
        "readWriteMany": {
          "type": "object",
          "description": "NFS based ReadWriteMany storage, requires `mount.nfs` on the hosts",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "storageClass": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "persistence": {
              "type": "object",
              "properties": {
                "size": {
                  "$ref": "#/$defs/quantity"
                },
                "storageClass": {
                  "$ref": "#/$defs/storageClass"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "reflector": {
      "type": "object",
      "properties": {
        "enabled": {
          "oneOf": [
            {
              "const": "auto"
            },
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "rbac": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "object",
          "description": "A map of a ClusterRole name to it's rules",
          "additionalProperties": {
            "type": "array",
            "additionalItems": {
              "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master-standalone-strict/_definitions.json#/definitions/io.k8s.api.rbac.v1.PolicyRule"
            },
            "minItems": 1
          }
        },
        "accounts": {
          "type": "object",
          "description": "A map of an account to it's (Cluster-)Roles",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "roles": {
                "type": "object",
                "description": "A map of a role to it's intended namespaces",
                "additionalProperties": {
                  "type": "array",
                  "additionalItems": {
                    "type": "string"
                  },
                  "minItems": 1
                },
                "minProperties": 1
              },
              "clusterRoles": {
                "type": "array",
                "additionalItems": {
                  "type": "string"
                },
                "minItems": 1
              }
            },
            "minProperties": 1,
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "backup": {
      "type": "object",
      "properties": {
        "resourcesPreset": {
          "$ref": "#/$defs/resourcesPreset"
        },
        "resources": {
          "$ref": "#/$defs/resourceRequirements"
        },
        "backupStorageLocations": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "minio": {
                        "type": "object",
                        "oneOf": [
                          {
                            "required": [
                              "accessKeyID",
                              "secretAccessKey"
                            ]
                          },
                          {
                            "required": [
                              "existingSecret"
                            ]
                          },
                          {
                            "not": {
                              "anyOf": [
                                {
                                  "required": [
                                    "accessKeyID"
                                  ]
                                },
                                {
                                  "required": [
                                    "secretAccessKey"
                                  ]
                                },
                                {
                                  "required": [
                                    "existingSecret"
                                  ]
                                }
                              ]
                            }
                          }
                        ],
                        "properties": {
                          "accessKeyID": {
                            "type": "string"
                          },
                          "secretAccessKey": {
                            "type": "string"
                          },
                          "existingSecret": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "key": {
                                "type": "string",
                                "description": "The default is <$providerName-$name> (e.g. 'minio-prod')"
                              }
                            },
                            "required": [
                              "name"
                            ],
                            "additionalProperties": false
                          },
                          "url": {
                            "type": "string"
                          },
                          "region": {
                            "type": "string",
                            "default": "Region1"
                          },
                          "forcePathStyle": {
                            "type": "boolean",
                            "default": true
                          }
                        },
                        "required": [
                          "url"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                ],
                "minProperties": 1,
                "maxProperties": 1
              },
              "bucket": {
                "type": "string"
              },
              "prefix": {
                "type": "string"
              }
            },
            "required": [
              "provider",
              "bucket"
            ],
            "additionalProperties": false
          }
        },
        "defaultLocation": {
          "type": "string"
        },
        "nodeAgent": {
          "type": "object",
          "properties": {
            "resourcesPreset": {
              "$ref": "#/$defs/resourcesPreset"
            },
            "resources": {
              "$ref": "#/$defs/resourceRequirements"
            }
          },
          "additionalProperties": false
        }
      },
      "oneOf": [
        {
          "properties": {
            "backupStorageLocations": {
              "minProperties": 1
            }
          },
          "required": [
            "defaultLocation"
          ]
        },
        {
          "properties": {
            "backupStorageLocations": {
              "maxProperties": 0
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "kube-janitor": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "common": {
      "type": "object",
      "description": "Values for sub-chart"
    }
  },
  "additionalProperties": false,
  "$defs": {
    "resourceRequirements": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master-standalone-strict/_definitions.json#/definitions/io.k8s.api.core.v1.ResourceRequirements"
    },
    "resourcesPreset": {
      "$ref": "https://raw.githubusercontent.com/teutonet/teutonet-helm-charts/main/charts/common/values.schema.json#/$defs/resourcesPreset"
    },
    "quantity": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master-standalone-strict/_definitions.json#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
    },
    "tolerations": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/master-standalone-strict/_definitions.json#/definitions/io.k8s.api.core.v1.Toleration"
    },
    "image": {
      "type": "object",
      "properties": {
        "registry": {
          "type": "string",
          "description": "The host of the registry",
          "examples": [
            "docker.io"
          ]
        },
        "repository": {
          "type": "string",
          "description": "The image path in the registry",
          "examples": [
            "bitnami/kubectl"
          ]
        },
        "tag": {
          "type": "string"
        },
        "digest": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "email": {
      "pattern": "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])"
    },
    "condition": {
      "type": "string",
      "description": "A condition with which to decide to include the resource. This will be templated. Must return a truthy value",
      "examples": [
        "{{ true }}",
        "{{ eq .Values.global.baseDomain \"teuto.net\" }}"
      ]
    },
    "targetNamespaces": {
      "description": "The namespaces to sync the secret into, or `ALL` for all namespaces",
      "oneOf": [
        {
          "type": "string",
          "const": "ALL"
        },
        {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          },
          "minItems": 1
        }
      ],
      "default": "ALL"
    },
    "storageClass": {
      "type": "string",
      "description": "The storageClass to use for persistence, e.g. for prometheus, otherwise use the cluster default (teutostack-ssd)"
    },
    "toolIngress": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "host": {
          "type": "string",
          "description": "The subdomain to use under `.global.clusterName`.`.global.baseDomain`"
        },
        "customDomain": {
          "type": "string",
          "description": "The full custom domain to use"
        }
      },
      "additionalProperties": false
    },
    "fluxRepository": {
      "properties": {
        "gitInterval": {
          "type": "string",
          "description": "The interval in which to sync the repository",
          "pattern": "[0-9]+(ms|s|m|h|d|w|y)",
          "default": "1m"
        },
        "decryption": {
          "type": "object",
          "properties": {
            "provider": {
              "type": "string",
              "enum": [
                "sops"
              ]
            }
          },
          "required": [
            "provider"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "url"
      ]
    }
  }
}
