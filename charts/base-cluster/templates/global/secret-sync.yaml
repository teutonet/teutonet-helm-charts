{{- $certs := list -}}
{{- $certMap := dict -}}

{{- $certificates := include "base-cluster.cert-manager.custom-certificates" . | fromYaml -}}

{{- range $name, $cert := $certificates -}}
  {{- $certMap := set $certMap (printf "%s-certificate" $name) $cert -}}
  {{- $certs = append $certs (printf "%s-certificate" $name) -}}
{{- end -}}

{{- $secrets := concat (.Values.global.imageCredentials | keys) $certs }}
{{- $targetsAllNamespaces := list -}}
{{- $targetsSpecificNamespaces := dict -}}

{{- $dicts := list $certMap .Values.global.imageCredentials -}}
{{- range $dict := $dicts -}}
  {{- range $name, $secret := $dict -}}
    {{- if typeIs "string" ($secret.targetNamespaces | default "ALL") -}}
      {{- $targetsAllNamespaces = append $targetsAllNamespaces $name -}}
    {{- else -}}
      {{- if has $.Release.Namespace $secret.targetNamespaces -}}
        {{- fail (printf "Secret '%s' targets release namespace '%s', this is not allowed." $name $.Release.Namespace) -}}
      {{- end -}}
      {{- $targetsSpecificNamespaces := set $targetsSpecificNamespaces $name $secret.targetNamespaces -}}
    {{- end -}}
  {{- end -}}
{{- end -}}

{{- if not (empty $secrets) -}}
  {{- include "base-cluster.secret-sync.rbac" . | nindent 0 }}
---
  {{- include "base-cluster.secret-sync.cronjob" (dict "context" . "secrets" $secrets "targetsAllNamespaces" $targetsAllNamespaces "targetsSpecificNamespaces" $targetsSpecificNamespaces) | nindent 0 -}}
{{- end -}}