apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: cert-manager
  namespace: cert-manager
  labels: {{- include "common.labels.standard" $ | nindent 4 }}
    app.kubernetes.io/component: cert-manager
spec:
  chart:
    spec: {{- include "base-cluster.helm.chartSpec" (dict "repo" "jetstack" "chart" "cert-manager" "context" $) | nindent 6 }}
  interval: 1h
  {{- if .Values.monitoring.prometheus.enabled }}
  dependsOn:
    - name: kube-prometheus-stack
      namespace: monitoring
  {{- end }}
  values:
    installCRDs: true
    {{- if .Values.global.imageRegistry }}
    image:
      repository: {{ printf "%s/jetstack/cert-manager-controller" $.Values.global.imageRegistry }}
    {{- end }}
    {{- if .Values.certManager.email }}
    ingressShim:
      defaultIssuerName: letsencrypt-production
      defaultIssuerKind: ClusterIssuer
    {{- end }}
    {{ if .Values.certManager.dnsChallengeNameservers }}
    {{- $nameservers := list -}}
    {{- range $ip, $port := .Values.certManager.dnsChallengeNameservers }}
    {{- $nameservers = append $nameservers (printf "%s:%v" $ip $port) -}}
    {{- end -}}
    extraArgs:
      - --dns01-recursive-nameservers={{- $nameservers | sortAlpha | join "," }}
    {{- end }}
    resources: {{- $.Values.certManager.resources | toYaml | nindent 6 }}
    replicaCount: 1
    securityContext: &securityContext
      runAsNonRoot: true
      runAsUser: 1001
      runAsGroup: 1001
      fsGroup: 1001
    cainjector:
      resources: {{- $.Values.certManager.caInjector.resources | toYaml | nindent 8 }}
      securityContext: *securityContext
      {{- if .Values.global.imageRegistry }}
      image:
        repository: {{ printf "%s/jetstack/cert-manager-cainjector" $.Values.global.imageRegistry }}
      {{- end }}
    webhook:
      resources: {{- $.Values.certManager.webhook.resources | toYaml | nindent 8 }}
      securityContext: *securityContext
      {{- if .Values.global.imageRegistry }}
      image:
        repository: {{ printf "%s/jetstack/cert-manager-webhook" $.Values.global.imageRegistry }}
      {{- end }}
    prometheus:
      enabled: {{ .Values.monitoring.prometheus.enabled }}
      servicemonitor:
        enabled: {{ .Values.monitoring.prometheus.enabled }}
        labels: {{- .Values.monitoring.labels | toYaml | nindent 10 }}
