{{- if and .Values.certManager.email .Values.ingress.enabled }}
{{- include "base-cluster.helm.resourceWithDependencies" (dict "name" "clusterissuer-letsencrypt-production" "resource" (include "base-cluster.cert-manager.clusterIssuer" (dict "name" "production" "url" "https://acme-v02.api.letsencrypt.org/directory" "context" $)) "dependencies" (dict "cert-manager" "cert-manager") "context" $ "additionalLabels" (dict "app.kubernetes.io/component" "cert-manager")) }}
---
{{- include "base-cluster.helm.resourceWithDependencies" (dict "name" "clusterissuer-letsencrypt-staging" "resource" (include "base-cluster.cert-manager.clusterIssuer" (dict "name" "staging" "url" "https://acme-staging-v02.api.letsencrypt.org/directory" "context" $)) "dependencies" (dict "cert-manager" "cert-manager") "context" $ "additionalLabels" (dict "app.kubernetes.io/component" "cert-manager")) }}
{{- end -}}

{{- define "base-cluster.cert-manager.clusterIssuer" -}}
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-{{ .name }}
  labels: {{- include "common.helm.labels" (dict) | nindent 4 }}
    app.kubernetes.io/component: {{ .name }}
    app.kubernetes.io/part-of: cert-manager
spec:
  acme:
    email: {{ .context.Values.certManager.email }}
    solvers:
      {{- if .context.Values.dns.provider }}
      - dns01:
          {{- $_ := required "You must choose a DNS provider" .context.Values.dns.provider -}}
          {{- if .context.Values.dns.provider.cloudflare }}
          cloudflare:
            apiTokenSecretRef:
              name: cert-manager-dns
              key: credentials
          {{- end }}
        {{- with .context.Values.dns.domains }}
        selector:
          dnsZones: {{- toYaml . | nindent 12 }}
        {{- end }}
      {{- end }}
      - http01:
          ingress:
            class: nginx
            serviceType: ClusterIP
    privateKeySecretRef:
      name: letsencrypt-{{ .name }}-account
    server: {{ .url | quote }}
{{- end -}}
