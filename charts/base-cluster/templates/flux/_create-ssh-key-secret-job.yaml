{{- define "base-cluster.flux.createSSHKeySecret" -}}
{{- include "base-cluster.flux.createSSHKeySecretRBAC" (dict "context" .context "name" .name) }}
---
{{ $name := printf "flux-generate-ssh-key-secret-%s" .name }}
{{- $secretName := printf "%s-flux-%s" (include "common.names.fullname" .context) .name -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $name }}
  namespace: {{ $.context.Release.Namespace }}
  labels: {{- include "common.labels.standard" .context | nindent 4 }}
    app.kubernetes.io/component: {{ .name | quote }}
    app.kubernetes.io/part-of: flux
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "1"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: {{ $name }}
      securityContext:
        runAsNonRoot: true
        runAsGroup: 1000
        runAsUser: 1000
      containers:
        - name: generate-ssh-key
          image: {{ template "base-cluster.flux.image" .context }}
          {{- if .context.Values.global.flux.image.repository | contains "@" }}
          imagePullPolicy: IfNotPresent
          {{- else }}
          imagePullPolicy: Always
          {{- end }}
          securityContext:
            readOnlyRootFilesystem: true
            privileged: false
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          command:
            - sh
            - -ex
            - -c
            - |-
              set -o pipefail
              flux create secret git --namespace {{ .context.Release.Namespace }} --url {{ .url | quote }} {{ $secretName | quote }} --export \
                | kubectl --namespace {{ .context.Release.Namespace }} create -f -
{{- end -}}