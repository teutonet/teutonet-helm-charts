{{- if .Values.monitoring.prometheus.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: sync-etcd-secret
  namespace: monitoring
  labels: {{- include "common.labels.standard" $ | nindent 4 }}
    app.kubernetes.io/component: monitoring
spec:
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: sync-etcd-secret
      app.kubernetes.io/part-of: monitoring
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: sync-etcd-secret
        app.kubernetes.io/part-of: monitoring
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
      serviceAccountName: sync-etcd-secret
      hostIPC: false
      hostNetwork: false
      hostPID: false
      priority: 0
      securityContext:
        runAsNonRoot: false
        runAsGroup: 0
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      initContainers:
        - name: generate-etcd-secret
          image: {{ template "base-cluster.kubectl.image" . }}
          securityContext: &containerSecurityContext
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
          {{- if .Values.global.kubectl.image.repository | contains "@" }}
          imagePullPolicy: IfNotPresent
          {{- else }}
          imagePullPolicy: Always
          {{- end }}
          command:
            - sh
            - -ex
            - -c
            - |-
              kubectl create secret generic etcd-certs -n monitoring \
                --from-file=/host/etc/kubernetes/pki/etcd/ca.crt \
                --from-file=/host/etc/kubernetes/pki/apiserver-etcd-client.crt \
                --from-file=/host/etc/kubernetes/pki/apiserver-etcd-client.key \
                --dry-run=client --output=yaml | \
              kubectl apply --server-side -n monitoring -f -
          resources:
            requests:
              memory: 64Mi
              cpu: 50m
            limits:
              memory: 128Mi
              cpu: 100m
          volumeMounts:
            - mountPath: /host/etc/kubernetes/pki
              name: host-pki
              readOnly: true
      containers:
        - name: sleep
          image: {{ template "base-cluster.kubectl.image" . }}
          securityContext: *containerSecurityContext
          command:
            - sleep
            - infinity
          resources:
            requests:
              memory: 1Mi
              cpu: 1m
            limits:
              memory: 16Mi
              cpu: 5m
      volumes:
        - name: host-pki
          hostPath:
            path: /etc/kubernetes/pki
            type: Directory
{{- end }}