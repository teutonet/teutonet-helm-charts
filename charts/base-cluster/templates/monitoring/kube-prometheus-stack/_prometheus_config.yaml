{{- define "base-cluster.prometheus-stack.prometheus.config" -}}
enabled: true
{{- if include "base-cluster.monitoring.unauthenticated-ingress.enabled" (dict "name" "prometheus" "context" .) }}
  {{- include "base-cluster.monitoring.ingress" (dict "name" "prometheus" "context" $) | nindent 0 }}
{{- end }}
prometheusSpec:
  {{- if (lookup "v1" "Secret" "monitoring" "additional-alertmanager-configs") }}
  additionalAlertManagerConfigsSecret:
    name: additional-alertmanager-configs
    key: prometheus-additional-alertmanager-configs.yaml
  {{- end }}
  {{- if include "base-cluster.monitoring.authenticated-ingress.enabled" (dict "name" "prometheus" "context" .) }}
  externalUrl: {{ printf "https://%s" (include "base-cluster.prometheus.host" $) }}
  {{- end }}
  resources: {{- .Values.monitoring.prometheus.resources | toYaml | nindent 4 }}
  priorityClassName: monitoring-components
  securityContext:
    seccompProfile:
      type: RuntimeDefault
  serviceMonitorSelectorNilUsesHelmValues: false
  ruleSelectorNilUsesHelmValues: false
  podMonitorSelectorNilUsesHelmValues: false
  probeSelectorNilUsesHelmValues: false
  retention: {{ .Values.monitoring.prometheus.retentionDuration }}
  retentionSize: {{ .Values.monitoring.prometheus.retentionSize }}
  storageSpec:
    volumeClaimTemplate:
      spec: {{- include "common.storage.class" (dict "persistence" .Values.monitoring.prometheus.persistence "global" $.Values.global) | nindent 8 }}
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: {{ .Values.monitoring.prometheus.persistence.size }}
  replicas: {{ .Values.monitoring.prometheus.replicas }}
  ruleSelector:
    matchLabels: {{- .Values.monitoring.labels | toYaml | nindent 6 }}
  serviceMonitorSelector:
    matchLabels: {{- .Values.monitoring.labels | toYaml | nindent 6 }}
  podMonitorSelector:
    matchLabels: {{- .Values.monitoring.labels | toYaml | nindent 6 }}
  probeSelector:
    matchLabels: {{- .Values.monitoring.labels | toYaml | nindent 6 }}
  additionalAlertRelabelConfigs:
    {{- if not .Values.monitoring.monitorAllNamespaces }}
      {{- $namespaces := list .Release.Namespace "kube-node-lease" "kube-public" "kube-system" -}}
      {{- range $name := include "base-cluster.enabled-namespaces" . | fromYaml | keys -}}
        {{- $namespaces = append $namespaces $name -}}
      {{- end }}
    - # TODO: Needs alternative
      source_labels:
        - namespace
      action: keep
      regex: {{ printf "(%s)" ($namespaces | sortAlpha | uniq | join "|") }}
    {{- end }}
    - source_labels:
        - __address__
      target_label: clustertype
      replacement: kubernetes # TODO: really needed?

    - source_labels:
        - __address__
      target_label: teutosla
      replacement: {{ .Values.global.serviceLevelAgreement }}
    - source_labels:
        - __address__
      target_label: cluster
      replacement: {{ .Values.global.clusterName }}
  {{- if .Values.monitoring.tracing.enabled }}
  tracingConfig:
    clientType: grpc
    samplingFraction: "0.1"
    insecure: true
    endpoint: open-telemetry-collector-opentelemetry-collector.monitoring:4317
  {{- end }}
{{- end -}}
