{{- if .Values.monitoring.prometheus.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: generate-etcd-secret
  namespace: monitoring
  labels: {{- include "common.labels.standard" $ | nindent 4 }}
    app.kubernetes.io/component: monitoring
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "1"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
      restartPolicy: Never
      serviceAccountName: generate-etcd-secret
      securityContext:
        runAsNonRoot: false
        runAsGroup: 0
        runAsUser: 0
      containers:
        - name: generate-etcd-secret
          image: {{ template "base-cluster.kubectl.image" . }}
          {{- if .Values.global.kubectl.image.repository | contains "@" }}
          imagePullPolicy: IfNotPresent
          {{- else }}
          imagePullPolicy: Always
          {{- end }}
          command:
            - sh
            - -ex
            - -c
            - |-
              kubectl create secret generic etcd-certs -n monitoring \
                --from-file=/host/etc/kubernetes/pki/etcd/ca.crt \
                --from-file=/host/etc/kubernetes/pki/apiserver-etcd-client.crt \
                --from-file=/host/etc/kubernetes/pki/apiserver-etcd-client.key \
                --dry-run=client --output=yaml | \
              kubectl apply --server-side -n monitoring -f -
          volumeMounts:
            - mountPath: /host/etc/kubernetes/pki
              name: host-pki
      volumes:
        - name: host-pki
          hostPath:
            path: /etc/kubernetes/pki
            type: Directory
{{- end }}