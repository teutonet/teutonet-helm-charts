{{- if .Values.controlPlane.hosted -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-ccm" .Release.Name }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/instance: ccm
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels: {{- include "common.labels.standard" . | nindent 6 }}
      app.kubernetes.io/instance: ccm
  template:
    metadata:
      annotations:
        checksum/config: {{ dig "data" "cloud.conf" "" (lookup "v1" "secret" .Release.Namespace (printf "%s-ccm-cloud-config" .Release.Name)) | sha256sum }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/instance: ccm
    spec:
      securityContext:
        runAsUser: 1001
      tolerations:
        - effect: NoSchedule
          key: node.cloudprovider.kubernetes.io/uninitialized
          value: 'true'
      automountServiceAccountToken: false
      containers:
        - name: openstack-cloud-controller-manager
          image: registry.k8s.io/provider-os/openstack-cloud-controller-manager:v1.30.3
          args:
            - /bin/openstack-cloud-controller-manager
            - --v=2
            - --cloud-config=$(CLOUD_CONFIG)
            - --cluster-name=$(CLUSTER_NAME)
            - --cloud-provider=openstack
            - --use-service-account-credentials=false
            - --controllers=cloud-node,cloud-node-lifecycle,service
            - --kubeconfig=$(KUBECONFIG)
            - --bind-address=127.0.0.1
          volumeMounts:
            - mountPath: /etc/config
              name: cloud-config-volume
              readOnly: true
            - mountPath: /tmp/workload-kubeconfig
              name: workload-kubeconfig
              subPath: value
          env:
            - name: KUBECONFIG
              value: /tmp/workload-kubeconfig
            - name: CLOUD_CONFIG
              value: /etc/config/cloud.conf
            - name: CLUSTER_NAME
              value: kubernetes
      priorityClassName: system-cluster-critical
      volumes:
        - name: cloud-config-volume
          secret:
            secretName: {{ printf "%s-ccm-cloud-config" .Release.Name }}
        - name: workload-kubeconfig
          secret:
            secretName: {{ .Release.Name }}-kubeconfig
            optional: false
{{- end -}}
