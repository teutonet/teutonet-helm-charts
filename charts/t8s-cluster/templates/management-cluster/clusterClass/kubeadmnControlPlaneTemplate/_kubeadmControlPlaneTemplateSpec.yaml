{{/*
KubeadmControlPlaneTemplate is immutable. We need to create new versions during upgrades.
Here we are generating a hash suffix.
*/}}
{{- define "t8s-cluster.clusterClass.kubeadmControlPlaneTemplate.spec" -}}
clusterConfiguration:
  apiServer:
    extraArgs:
      admission-control-config-file: &admissionControlConfigFilePath /etc/kubernetes/admission-control-config.yaml
      cloud-provider: external
      enable-admission-plugins: AlwaysPullImages,EventRateLimit,NodeRestriction
      profiling: 'false'
      tls-cipher-suites: {{ include "t8s-cluster.clusterClass.tlsCipherSuites" (dict) }}
    extraVolumes:
      - hostPath: *admissionControlConfigFilePath
        mountPath: *admissionControlConfigFilePath
        name: admission-control-config
        readOnly: true
      - hostPath: &eventRateLimitConfigFilePath /etc/kubernetes/event-rate-limit-config.yaml
        mountPath: *eventRateLimitConfigFilePath
        name: event-rate-limit-config
        readOnly: true
  controllerManager:
    extraArgs:
      authorization-always-allow-paths: /healthz,/readyz,/livez,/metrics
      bind-address: 0.0.0.0
      cloud-provider: external
      profiling: 'false'
      terminated-pod-gc-threshold: '100'
  etcd:
    local:
      extraArgs:
        listen-metrics-urls: http://0.0.0.0:2381
  scheduler:
    extraArgs:
      authorization-always-allow-paths: /healthz,/readyz,/livez,/metrics
      bind-address: 0.0.0.0
      profiling: 'false'
files: {{- include "t8s-cluster.patches.kubelet.patches" $ | nindent 2 }}
  - content: |- {{- .Files.Get "files/admission-control-config.yaml" | nindent 6 }}
    path: *admissionControlConfigFilePath
  - content: |- {{- .Files.Get "files/event-rate-limit-config.yaml" | nindent 6 }}
    path: *eventRateLimitConfigFilePath
  - content: |- {{- .Files.Get "files/kube-proxy.patch.sh" | nindent 6 }}
    path: /etc/kube-proxy-patch.sh
    permissions: "0700"
  - content: |- {{- .Files.Get "files/kube-proxy.config.yaml" | nindent 6 }}
    path: /etc/kube-proxy-config.yaml
  {{- if .Values.containerRegistryProxy.proxyRegistryEndpoint }}
    {{- include "t8s-cluster.clusterClass.containerdConfig.containerRegistryProxyConfigs" (dict "context" $) | nindent 2 }}
  {{- end }}
  - content: |- {{- include "t8s-cluster.clusterClass.containerdConfig.plugins" (dict "context" $ "gpu" false) | nindent 6 }}
    path: /etc/containerd/conf.d/plugins.toml
  {{- if .Values.global.injectedCertificateAuthorities }}
  - content: |- {{- .Values.global.injectedCertificateAuthorities | nindent 6 }}
    path: /usr/local/share/ca-certificates/injected-ca-certs.crt
  {{- end }}
initConfiguration:
  nodeRegistration:
    kubeletExtraArgs: {{- include "t8s-cluster.clusterClass.kubeletExtraArgs" $ | nindent 6 }}
    name: '{{ `{{ local_hostname }}` }}'
  patches:
    directory: {{ include "t8s-cluster.patches.directory" (dict) }}
joinConfiguration:
  nodeRegistration:
    kubeletExtraArgs: {{- include "t8s-cluster.clusterClass.kubeletExtraArgs" $ | nindent 6 }}
    name: '{{ `{{ local_hostname }}` }}'
  patches:
    directory: {{ include "t8s-cluster.patches.directory" (dict) }}
preKubeadmCommands: {{- include "t8s-cluster.clusterClass.preKubeadmCommands" $ | nindent 2 }}
postKubeadmCommands: {{- include "t8s-cluster.clusterClass.postKubeadmCommands" (dict) | nindent 2 }}
{{- end -}}
