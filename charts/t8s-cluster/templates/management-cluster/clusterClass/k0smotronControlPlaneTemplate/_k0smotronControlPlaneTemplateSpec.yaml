{{/*
KubeadmControlPlaneTemplate is immutable. We need to create new versions during upgrades.
Here we are generating a hash suffix.
This function needs the whole `$` context to be able to use `.Files.Get`
*/}}
{{- define "t8s-cluster.clusterClass.k0smotronControlPlaneTemplate.spec" -}}
  {{- $admissionControlConfigFileName := include "t8s-cluster.clusterClass.apiServer.admissionControlConfigFileName" (dict) -}}
  {{- $eventRateLimitConfigFileName := include "t8s-cluster.clusterClass.apiServer.eventRateLimitConfigFileName" (dict) -}}
replicas: {{ $.Values.controlPlane.singleNode | ternary 1 3 }}
service:
  type: LoadBalancer
  apiPort: 6443
  konnectivityPort: 8132
controllerPlaneFlags:
  - --disable-components=metrics-server

mounts:
  - path: {{ include "t8s-cluster.clusterClass.apiServer.configDir" (dict) }}
    configMap:
      name: {{ printf "%s-api-server-config" $.Release.Name }}
      defaultMode: 0444
      optional: false
      items:
        - key: {{ $admissionControlConfigFileName }}
          path: {{ $admissionControlConfigFileName }}
        - key: {{ $eventRateLimitConfigFileName }}
          path: {{ $eventRateLimitConfigFileName }}
k0sConfig:
  apiVersion: k0s.k0sproject.io/v1beta1
  kind: ClusterConfig
  spec:
    network:
      provider: custom
    api:
      extraArgs: {{- include "t8s-cluster.clusterClass.args.apiServer" (dict "context" .) | nindent 8 }}
    controllerManager:
      extraArgs: {{- include "t8s-cluster.clusterClass.args.controllerManager" (dict "context" .) | nindent 8 }}
    scheduler:
      extraArgs: {{- include "t8s-cluster.clusterClass.args.scheduler" (dict) | nindent 8 }}
    telemetry:
      enabled: false
    workerProfiles:
      - name: default
        {{- $values := dict "cgroupDriver" "systemd" }}
        {{ $values = mustMerge $values (include "t8s-cluster.kubelet.options" (dict) | fromYaml) }}
        {{ $values = mustMerge $values (include "t8s-cluster.patches.kubelet.imagePulls" (dict "context" .) | fromYaml) }}
        values: {{- $values | toYaml | nindent 10 }}
    featureGates: {{- range $featureGate, $components := include "t8s-cluster.featureGates" (dict) | fromYaml }}
      - name: {{ $featureGate }}
        enabled: true
        components: {{- $components | toYaml | nindent 10 }}
      {{- end }}
etcd:
  persistence:
    size: 5Gi
{{/*rolloutBefore:*/}}
{{/*  certificatesExpiryDays: 60*/}}
{{/*kubeadmConfigSpec:*/}}
{{/*  clusterConfiguration:*/}}
{{/*    apiServer:*/}}
{{/*      extraVolumes:*/}}
{{/*        - hostPath: *admissionControlConfigFilePath*/}}
{{/*          mountPath: *admissionControlConfigFilePath*/}}
{{/*          name: admission-control-config*/}}
{{/*          readOnly: true*/}}
{{/*        - hostPath: &eventRateLimitConfigFilePath /etc/kubernetes/event-rate-limit-config.yaml*/}}
{{/*          mountPath: *eventRateLimitConfigFilePath*/}}
{{/*          name: event-rate-limit-config*/}}
{{/*          readOnly: true*/}}
{{/*  files:*/}}
{{/*    - content: |- {{- .Files.Get "files/admission-control-config.yaml" | nindent 8 }}*/}}
{{/*      path: *admissionControlConfigFilePath*/}}
{{/*    - content: |- {{- .Files.Get "files/event-rate-limit-config.yaml" | nindent 8 }}*/}}
{{/*      path: *eventRateLimitConfigFilePath*/}}
{{/*    - content: |- {{- .Files.Get "files/kube-proxy.patch.sh" | nindent 8 }}*/}}
{{/*      path: /etc/kube-proxy-patch.sh*/}}
{{/*      permissions: "0700"*/}}
{{/*    - content: |- {{- .Files.Get "files/kube-proxy.config.yaml" | nindent 8 }}*/}}
{{/*      path: /etc/kube-proxy-config.yaml*/}}
{{/*  preKubeadmCommands: {{- include "t8s-cluster.clusterClass.preKubeadmCommands" (dict "context" $) | nindent 4 }}*/}}
{{/*  postKubeadmCommands: {{- include "t8s-cluster.clusterClass.postKubeadmCommands" (dict) | nindent 4 }}*/}}
{{- end -}}
