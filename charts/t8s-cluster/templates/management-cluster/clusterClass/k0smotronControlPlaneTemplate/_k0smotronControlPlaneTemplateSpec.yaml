{{/*
KubeadmControlPlaneTemplate is immutable. We need to create new versions during upgrades.
Here we are generating a hash suffix.
This function needs the whole `$` context to be able to use `.Files.Get`
*/}}
{{- define "t8s-cluster.clusterClass.k0smotronControlPlaneTemplate.spec" -}}
replicas: {{ $.Values.controlPlane.singleNode | ternary 1 3 }}
resources: {{- include "common.resources" .Values.controlPlane | nindent 2 }}
service:
  type: LoadBalancer
  apiPort: 6443
  konnectivityPort: 8132
controllerPlaneFlags:
  - --disable-components=metrics-server
mounts:
  - configMap:
      name: {{ printf "%s-apiserver" $.Release.Name }}
      {{- $items := list -}}
      {{- range $name, $file := mustMerge (include "t8s-cluster.clusterClass.apiServer.staticFiles" (dict) | fromYaml) (include "t8s-cluster.clusterClass.apiServer.dynamicFiles" (dict "context" .) | fromYaml) -}}
        {{- $items = append $items (dict "key" $name "path" (get $file "fileName" | required (printf "missing fileName for %s" $file))) -}}
      {{- end }}
      items: {{- toYaml $items | nindent 6 }}
    path: {{ include "t8s-cluster.clusterClass.configPath" (dict) }}
k0sConfig:
  apiVersion: k0s.k0sproject.io/v1beta1
  kind: ClusterConfig
  spec:
    network:
      provider: custom
    api:
      extraArgs: {{- include "t8s-cluster.clusterClass.args.apiServer" (dict "context" .) | nindent 8 }}
    controllerManager:
      extraArgs: {{- include "t8s-cluster.clusterClass.args.controllerManager" (dict "context" .) | nindent 8 }}
    scheduler:
      extraArgs: {{- include "t8s-cluster.clusterClass.args.scheduler" (dict) | nindent 8 }}
    telemetry:
      enabled: false
    workerProfiles:
      - name: default
        {{- $values := dict "cgroupDriver" "systemd" }}
        {{ $values = mustMerge $values (include "t8s-cluster.kubelet.options" (dict) | fromYaml) }}
        {{ $values = mustMerge $values (include "t8s-cluster.patches.kubelet.imagePulls" (dict "context" .) | fromYaml) }}
        values: {{- toYaml $values | nindent 10 }}
    featureGates: {{- range $featureGate, $components := include "t8s-cluster.featureGates" (dict) | fromYaml }}
      - name: {{ $featureGate }}
        enabled: true
        components: {{- toYaml $components | nindent 10 }}
      {{- end }}
etcd:
  persistence:
    size: 5Gi
{{- end -}}
